运行方法：点击编译运行，在控制台输入文件名称，回车，程序开始运行；
下面的运行结果与预期完全相同，前部分是各个语法成分的信息，后面一部分是符号表的内容（方便调试）
运行结果：
This is const defination!Type is int
This is const defination!Type is char
This is const defination!Type is int
This is const statement part !

This is var defination!Type is int
This is var defination!Type is int
This is var defination!Type is char
This is var statement part !

This is para statement!
This is factor!
This is term
This is factor!
This is term
This is expression
This is return statement!

statelist is over!
This is combine statement!
This is funktion statement!

ret1
This is para statement!
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is return statement!

This is if statement!

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is return statement!

This is if statement!

statelist is over!
This is combine statement!
This is a funktion statement!

This is para statement!
This is const defination!Type is int
This is const statement part !

This is var defination!Type is int
This is var defination!Type is char
This is var statement part !

This is combine statement!
This is a funktion statement!

funct_add
This is para statement!
This is var defination!Type is int
This is var defination!Type is char
This is var statement part !

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is assignment!

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is assignment!

This is factor!
This is factor!
This is term
This is expression
This is assignment!

This is factor!
This is term
This part call Function:add is over
This is factor!
This is term
This is factor!
This is term
This is expression
This is factor!
This is term
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is return statement!

statelist is over!
This is combine statement!
This is a funktion statement!

This is para statement!
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is factor!
This is term
This is factor!
This is term
This is factor!
This is term
This is expression
This is return statement!

This is if statement!

statelist is over!

This is if statement!

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is factor!
This is term
This is factor!
This is term
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is return statement!

This is if statement!

statelist is over!

This is if statement!

statelist is over!
This is combine statement!
This is a funktion statement!

This is para statement!
This is factor!
This is term
This is factor!
This is term
This is expression
This is assignment!

This is return statement!

statelist is over!
This is combine statement!
This is a funktion statement!

This is para statement!
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is return statement!

This is if statement!

This is factor!
This is term
This is expression
This is factor!
This is term
This is factor!
This is term
This is expression
This is factor!
This is term
This is factor!
This is term
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is assignment!

This part call Function:FibonA is over

This is return statement!

statelist is over!
This is combine statement!
This is a funktion statement!

This is const defination!Type is int
This is const statement part !

This is var defination!Type is int
This is var defination!Type is char
This is var defination!Type is int
This is var defination!Type is char
This is var defination!Type is int
This is var defination!Type is int
This is var defination!Type is char
This is var statement part !

This is factor!
This is term
This is expression
This is assignment!

This is factor!
This is term
This is expression
This is assignment!

This is a blank statement!

This is a blank statement!

This part call Function:count_1 is over

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is scanf statement!

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is assignment!

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is assignment!

This is factor!
This is term
This is factor!
This is term
This is expression
This is assignment!

statelist is over!

This is while statement!

This is scanf statement!

This is scanf statement!

This is scanf statement!

This part call Function:count_1 is over

This is factor!
This is term
This is expression
This is assignment!

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is assignment!

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is assignment!

This part call Function:FibonA is over

This is factor!
This is term
This is expression
This is assignment!

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is printf statement!

This is factor!
This is term
This is factor!
This is term
This is expression
This is assignment!

statelist is over!

This is while statement!

This part call Function:count_1 is over

This part call Function:fun_void is over

This part call Function:count_1 is over

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is printf statement!

This is if statement!

one case is over!
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is printf statement!

This is if statement!

one case is over!
This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is printf statement!

statelist is over!

This is if statement!

one case is over!
This is case tab!
This is factor!
This is term
This is expression
This is printf statement!

This is default case!
This is switch statement!

This part call Function:count_1 is over

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is printf statement!

This is if statement!

This is factor!
This is term
This is factor!
This is term
This is expression
This is factor!
This is factor!
This is term
This is expression
This is printf statement!

This is if statement!

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is printf statement!

This is if statement!

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is printf statement!

This is if statement!

This is factor!
This is term
This is expression
This is factor!
This is factor!
This is term
This is expression
This is printf statement!

This is if statement!

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is printf statement!

This is if statement!

This is factor!
This is term
This is factor!
This is term
This is expression
This is printf statement!

This is if statement!

This part call Function:count_1 is over

This part call Function:add is over
This is factor!
This is term
This is expression
This is printf statement!

This part call Function:count_1 is over

This part call Function:funct_add is over
This is factor!
This is term
This is expression
This is printf statement!

This part call Function:count_1 is over

This is factor!
This is term
This is factor!
This is term
This is factor!
This is term
This is factor!
This is term
This is factor!
This is term
This is factor!
This is term
This is factor!
This is term
This is factor!
This is term
This is expression
This is printf statement!

This part call Function:count_1 is over

This is factor!
This is term
This is factor!
This is term
This is factor!
This is term
This is factor!
This is term
This is expression
This is printf statement!

This is factor!
This is term
This is factor!
This is term
This is factor!
This is term
This is expression
This is printf statement!

This is factor!
This is term
This is factor!
This is term
This is expression
This is printf statement!

This is factor!
This is term
This is factor!
This is term
This is expression
This is factor!
This is term
This is factor!
This is term
This is factor!
This is term
This is factor!
This is factor!
This is factor!
This is term
This part call Function:add is over
This is factor!
This is factor!
This is term
This is factor!
This is term
This is expression
This is factor!
This is factor!
This is factor!
This is factor!
This is term
This is expression
This is factor!
This is term
This is factor!
This is term
This is factor!
This is term
This is expression
This is printf statement!

This part call Function:count_1 is over

This is printf statement!

This is a blank statement!

This is a blank statement!

statelist is over!

This is a blank statement!

This is a blank statement!

This part call Function:count_1 is over

This is factor!
This is term
This is expression
This is printf statement!

This is factor!
This is term
This is expression
This is printf statement!

This is printf statement!

This is factor!
This is term
This is expression
This is printf statement!

This part call Function:add is over
This is factor!
This is term
This is expression
This is printf statement!

This is factor!
This is term
This is expression
This is factor!
This is term
This is expression
This is printf statement!

This part call Function:trans_case is over
This is factor!
This is factor!
This is factor!
This is term
This is expression
This is printf statement!

statelist is over!

This is factor!
This is term
This is expression
This is assignment!

This is factor!
This is factor!
This is term
This is factor!
This is term
This is expression
This part call Function:trans_case is over
This is factor!
This is term
This is expression
This is printf statement!

This is factor!
This is term
This is factor!
This is term
This is expression
This is assignment!

statelist is over!

This is while statement!

This is return statement!

statelist is over!
This is combine statement!
This is main funktion!
This is a funktion statement!

a1 0 0 0 0
b1 0 0 1 0
c1 0 0 10 0
A1 0 1 97 0
B1 0 1 65 0
C1 0 1 43 0
D1 0 1 45 0
E1 0 1 42 0
F1 0 1 47 0
G1 0 1 95 0
H1 0 1 49 0
d1 0 0 0 0
e1 0 0 0 0
f1 0 0 5 0
g1 0 0 -10 0
Fibonaq 1 0 0 10
count 1 0 1 0
_a__A_ 1 1 0 0
add 2 0 0 2
a 3 0 0 0
k 3 0 0 0
ret1 2 0 0 1
swi 3 0 0 0
fun_void 2 2 0 0
a 0 0 10 0
b 1 0 0 0
sc 1 1 0 0
funct_add 2 0 0 2
a 3 0 0 0
k 3 0 0 0
c 1 0 0 0
fun_cc 1 1 0 2
trans_case 2 1 0 1
s 3 1 0 0
count_1 2 2 0 0
FibonA 2 2 0 1
k 3 0 0 0
a_num 0 0 -10 0
b_num 0 0 -20 0
a_array 1 0 0 5
k 1 0 4 0
C_array 1 1 0 5
m 1 0 0 0
swisym 1 0 0 0
n 1 1 0 0
Fibo_count 1 0 2 0
sc 1 0 0 0
a 1 0 0 0
b 1 0 0 0
sss 1 1 83 0
