a1 0 0 0 0 0 0
b1 0 0 1 0 0 0
c1 0 0 10 0 0 0
A1 0 1 97 0 0 0
B1 0 1 65 0 0 0
C1 0 1 43 0 0 0
D1 0 1 45 0 0 0
E1 0 1 42 0 0 0
F1 0 1 47 0 0 0
G1 0 1 95 0 0 0
H1 0 1 49 0 0 0
d1 0 0 0 0 0 0
e1 0 0 0 0 0 0
f1 0 0 5 0 0 0
g1 0 0 -10 0 0 0
Fibonaq 1 0 0 10 0 0
count 1 0 0 0 0 0
_a__A_ 1 1 0 0 0 0
add 2 0 0 2 0 20
a 3 0 0 0 12 0
k 3 0 0 0 8 0
i 0 0 0 0 4 0
t0 1 0 0 0 0 0
ret1 2 0 0 1 1 8
swi 3 0 0 0 0 0
fun_void 2 2 0 0 2 13
a 0 0 10 0 5 0
b 1 0 0 0 1 0
sc 1 1 0 0 0 0
funct_add 2 0 0 2 3 40
a 3 0 0 0 32 0
k 3 0 0 0 28 0
c 1 0 0 0 24 0
fun_cc 1 1 0 2 22 0
t1 1 0 0 0 18 0
t2 1 0 0 0 14 0
t3 1 0 0 0 10 0
t4 1 1 0 0 9 0
t5 1 0 0 0 5 0
t6 1 1 0 0 4 0
t7 1 0 0 0 0 0
trans_case 2 1 0 1 4 21
s 3 1 0 0 16 0
t8 1 0 0 0 12 0
t9 1 0 0 0 8 0
t10 1 0 0 0 4 0
t11 1 0 0 0 0 0
count_1 2 2 0 0 5 8
t12 1 0 0 0 0 0
FibonA 2 2 0 1 6 32
k 3 0 0 0 24 0
t13 1 0 0 0 20 0
t14 1 0 0 0 16 0
t15 1 0 0 0 12 0
t16 1 0 0 0 8 0
t17 1 0 0 0 4 0
t18 1 0 0 0 0 0
main 2 2 0 0 7 297
a_num 0 0 10 0 289 0
b_num 0 0 20 0 285 0
test 0 1 99 0 284 0
a_array 1 0 0 5 264 0
k 1 0 0 0 260 0
C_array 1 1 0 5 255 0
m 1 0 0 0 251 0
swisym 1 0 0 0 247 0
n 1 1 0 0 246 0
Fibo_count 1 0 0 0 242 0
sc 1 0 0 0 238 0
a 1 0 0 0 234 0
b 1 0 0 0 230 0
sss 1 1 0 0 229 0
sk 1 0 0 0 225 0
t19 1 0 0 0 221 0
t20 1 0 0 0 217 0
t21 1 0 0 0 213 0
t22 1 0 0 0 209 0
t23 1 0 0 0 205 0
t24 1 0 0 0 201 0
t25 1 0 0 0 197 0
t26 1 0 0 0 193 0
t27 1 0 0 0 189 0
t28 1 0 0 0 185 0
t29 1 0 0 0 181 0
t30 1 0 0 0 177 0
t31 1 0 0 0 173 0
t32 1 0 0 0 169 0
t33 1 0 0 0 165 0
t34 1 0 0 0 161 0
t35 1 0 0 0 157 0
t36 1 0 0 0 153 0
t37 1 0 0 0 149 0
t38 1 0 0 0 145 0
t39 1 0 0 0 141 0
t40 1 0 0 0 137 0
t41 1 0 0 0 133 0
t42 1 0 0 0 129 0
t43 1 0 0 0 125 0
t44 1 0 0 0 121 0
t45 1 0 0 0 117 0
t46 1 0 0 0 113 0
t47 1 0 0 0 109 0
t48 1 0 0 0 105 0
t49 1 0 0 0 101 0
t50 1 0 0 0 97 0
t51 1 0 0 0 93 0
t52 1 0 0 0 89 0
t53 1 0 0 0 85 0
t54 1 0 0 0 81 0
t55 1 0 0 0 77 0
t56 1 0 0 0 73 0
t57 1 0 0 0 69 0
t58 1 0 0 0 65 0
t59 1 0 0 0 61 0
t60 1 0 0 0 57 0
t61 1 0 0 0 53 0
t62 1 0 0 0 49 0
t63 1 0 0 0 45 0
t64 1 0 0 0 41 0
t65 1 0 0 0 37 0
t66 1 0 0 0 33 0
t67 1 1 0 0 32 0
t68 1 1 0 0 31 0
t69 1 1 0 0 30 0
t70 1 0 0 0 26 0
t71 1 0 0 0 22 0
t72 1 0 0 0 18 0
t73 1 0 0 0 14 0
t74 1 0 0 0 10 0
t75 1 1 0 0 9 0
t76 1 1 0 0 8 0
t77 1 0 0 0 4 0
t78 1 0 0 0 0 0
9,23
Compiler process over!
void f_par(int k,int fdes){
    int i=0,pnum;
    pnum=MTable.Tab[fdes].paranum;
    if(pnum==0)return;
    printf("addi $sp,$sp,-%d\n",4*pnum);
    for(i=0;i<pnum;i++){
        switch(i){
        case 0:
            printf("sw $a0,%d($sp)\n",4*(pnum-1));
            break;
        case 1:
            printf("sw $a1,%d($sp)\n",4*(pnum-2));
            break;
        case 2:
            printf("sw $a2,%d($sp)\n",4*(pnum-3));
            break;
        case 3:
            printf("sw $a3,%d($sp)\n",4*(pnum-4));
            break;
        }
    }
}
re3=genvar();
                enter(re3,1,0);
                strcpy(midtab.Midcod[midtab.midcodeptr-1].res,re3);
                strcpy(rev1,re3);