1.    无返回值的函数要么没有return语句，要么只有return;
return (0)是不可以出现在无返回值函数中的
2.    printf(字符串,表达式)，应该按照顺序输出;先输出字符串内容，再输出表达式的内容
3.    错误报告：发现第一个错误后要继续分析，不能马上退出，发现错误就不用生成中间代码和目标代码；报错位置准确，错误情况定义合理即可。
需要报告的错误包括：
(1)    语法错误；
比如出现了左括号但是没有出现对应的右括号这一类问题需要报错，缺少分号，缺少右括号，缺少右引号等；文法中无参数函数调用不需要括号时，写了括号等。
(2)    使用未定义标识符，标识符重复定义，标识符和保留字冲突（int,char）；
(3)    实参个数不匹配，实参和形参类型不匹配；
(4)    静态数组越界比如说数组的大小是3，但是printf输出b2[3]，编译器不需要推导常量表达式来进行编译期越界检查；
(5)    出现不符合文法中的符号；
(6)    类型不匹配，见6；
(7)    给常量赋值；
4.    函数中定义了与全局变量标识符同名的变量要能够正确计算；
5.    如果文法中有严格区分大小写的会有考察错误的情况的；不区分标识符大小写的文法，也有考察的测试点。
6.    类型不匹配的问题： 
仅在表达式计算中有类型转换，字符型一旦参与运算则转换成整型，包括小括号括起来的字符型，例如(‘c’)的结果是整型。有实型的文法里，整型和实型运算，自动转换为实型。
其它地方，例如赋值、函数传参、if/while条件语句中关系比较、switch-case分支语句里边，要求类型完全匹配，并且＜条件＞中的关系比较只能是整形或者实型之间，不能是字符型。
但是，if ‘(’＜条件＞‘)’和while ‘(’＜条件＞‘)’里边，如果<条件>是单个表达式，则必须是整型。
例如：
int a;
a=’c’;  // 错误

if((‘c’))  // 是合理的情况

if (‘a’>’b’)  // 不合理

int func()
{
return (‘c’);  这里需要报错
}